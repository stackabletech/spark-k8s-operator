---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spark-connect-client
data:
  example.py: |-
    import sys

    from pyspark.sql import SparkSession
    import pyspark.sql.functions as fn

    if __name__ == "__main__":
        remote: str = sys.argv[1]

        print(f"Connecting to Spark Connect server at {remote}")

        # Adding s3a configuration properties here has no effect unfortunately.
        # They need to be set in the SparkConnectServer.
        spark = (
            SparkSession.builder.appName("SimpleSparkConnectApp")
            .remote(remote)
            .getOrCreate()
        )

        logFile = "/stackable/spark/README.md"

        print(f"Reading log file: {logFile}")
        logData = spark.read.text(logFile).cache()

        print("Counting words in log file")
        wc = (
          logData.select(
            fn.explode(fn.split(logData["value"], r"\s+"))
          .alias("words"))
          .groupBy("words").count()
        )

        wc.show()

        dest = "s3a://mybucket/wordcount"
        print(f"Writing word count to S3 {dest}")
        wc.write.mode("overwrite").parquet(dest)

        spark.stop()
---
apiVersion: batch/v1
kind: Job
metadata:
  name: simple-connect-app
  labels:
    stackable.tech/vendor: Stackable
spec:
  template:
    spec:
      restartPolicy: OnFailure
      activeDeadlineSeconds: 600
      containers:
        - name: simple-connect-app
{% if test_scenario['values']['spark-connect-client'].find(",") > 0 %}
          image: "{{ test_scenario['values']['spark-connect-client'].split(',')[1] }}"
{% else %}
          image: oci.stackable.tech/stackable/spark-connect-client:{{ test_scenario['values']['spark-connect-client'] }}-stackable0.0.0-dev
{% endif %}
          imagePullPolicy: IfNotPresent
          command:
            [
              "/usr/bin/python",
              "/app/example.py",
              "sc://spark-connect-server",
            ]
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 200m
              memory: 128Mi
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: accessKey
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: s3-credentials
                  key: secretKey
          volumeMounts:
            - name: spark-connect-client
              mountPath: /app
      volumes:
        - name: spark-connect-client
          configMap:
            name: spark-connect-client

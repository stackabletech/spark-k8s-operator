---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sparkapplications.spark.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: spark.stackable.tech
  names:
    categories: []
    kind: SparkApplication
    plural: sparkapplications
    shortNames:
      - sparkapp
    singular: sparkapplication
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for SparkApplicationSpec via `CustomResource`
          properties:
            spec:
              description: |-
                A Spark cluster stacklet. This resource is managed by the Stackable operator for Apache Spark. Find more information on how to use it and the resources that the operator generates in the [operator documentation](https://docs.stackable.tech/home/25.3/spark-k8s/).

                The SparkApplication CRD looks a little different than the CRDs of the other products on the Stackable Data Platform.
              properties:
                args:
                  default: []
                  description: Arguments passed directly to the job artifact.
                  items:
                    type: string
                  type: array
                deps:
                  default:
                    excludePackages: []
                    packages: []
                    repositories: []
                    requirements: []
                  description: 'Job dependencies: a list of python packages that will be installed via pip, a list of packages or repositories that is passed directly to spark-submit, or a list of excluded packages (also passed directly to spark-submit).'
                  properties:
                    excludePackages:
                      default: []
                      description: A list of excluded packages that is passed directly to `spark-submit`.
                      items:
                        type: string
                      type: array
                    packages:
                      default: []
                      description: A list of packages that is passed directly to `spark-submit`.
                      items:
                        type: string
                      type: array
                    repositories:
                      default: []
                      description: A list of repositories that is passed directly to `spark-submit`.
                      items:
                        type: string
                      type: array
                    requirements:
                      default: []
                      description: 'Under the `requirements` you can specify Python dependencies that will be installed with `pip`. Example: `tabulate==0.8.9`'
                      items:
                        type: string
                      type: array
                  type: object
                driver:
                  description: The driver role specifies the configuration that, together with the driver pod template, is used by Spark to create driver pods.
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        affinity:
                          default:
                            nodeAffinity: null
                            nodeSelector: null
                            podAffinity: null
                            podAntiAffinity: null
                          description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/25.3/concepts/operations/pod_placement).
                          properties:
                            nodeAffinity:
                              description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                            podAffinity:
                              description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            podAntiAffinity:
                              description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        logging:
                          default:
                            containers: {}
                            enableVectorAgent: null
                          description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/25.3/concepts/logging).
                          properties:
                            containers:
                              additionalProperties:
                                anyOf:
                                  - required:
                                      - custom
                                  - {}
                                description: Log configuration of the container
                                properties:
                                  console:
                                    description: Configuration for the console appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  custom:
                                    description: Custom log configuration provided in a ConfigMap
                                    properties:
                                      configMap:
                                        description: ConfigMap containing the log configuration files
                                        nullable: true
                                        type: string
                                    type: object
                                  file:
                                    description: Configuration for the file appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  loggers:
                                    additionalProperties:
                                      description: Configuration of a logger
                                      properties:
                                        level:
                                          description: The log level threshold. Log events with a lower log level are discarded.
                                          enum:
                                            - TRACE
                                            - DEBUG
                                            - INFO
                                            - WARN
                                            - ERROR
                                            - FATAL
                                            - NONE
                                          nullable: true
                                          type: string
                                      type: object
                                    default: {}
                                    description: Configuration per logger
                                    type: object
                                type: object
                              description: Log configuration per container.
                              type: object
                            enableVectorAgent:
                              description: Wether or not to deploy a container with the Vector log agent.
                              nullable: true
                              type: boolean
                          type: object
                        requestedSecretLifetime:
                          description: Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                        volumeMounts:
                          description: Volume mounts for the spark-submit, driver and executor pods.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                env:
                  default: []
                  description: A list of environment variables that will be set in the job pod and the driver and executor pod templates.
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                              - name
                            type: object
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                type: string
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                              - name
                            type: object
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                executor:
                  description: The executor role specifies the configuration that, together with the driver pod template, is used by Spark to create the executor pods. This is RoleGroup instead of plain CommonConfiguration because it needs to allows for the number of replicas. to be specified.
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        affinity:
                          default:
                            nodeAffinity: null
                            nodeSelector: null
                            podAffinity: null
                            podAntiAffinity: null
                          description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/25.3/concepts/operations/pod_placement).
                          properties:
                            nodeAffinity:
                              description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                            podAffinity:
                              description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            podAntiAffinity:
                              description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        logging:
                          default:
                            containers: {}
                            enableVectorAgent: null
                          description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/25.3/concepts/logging).
                          properties:
                            containers:
                              additionalProperties:
                                anyOf:
                                  - required:
                                      - custom
                                  - {}
                                description: Log configuration of the container
                                properties:
                                  console:
                                    description: Configuration for the console appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  custom:
                                    description: Custom log configuration provided in a ConfigMap
                                    properties:
                                      configMap:
                                        description: ConfigMap containing the log configuration files
                                        nullable: true
                                        type: string
                                    type: object
                                  file:
                                    description: Configuration for the file appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  loggers:
                                    additionalProperties:
                                      description: Configuration of a logger
                                      properties:
                                        level:
                                          description: The log level threshold. Log events with a lower log level are discarded.
                                          enum:
                                            - TRACE
                                            - DEBUG
                                            - INFO
                                            - WARN
                                            - ERROR
                                            - FATAL
                                            - NONE
                                          nullable: true
                                          type: string
                                      type: object
                                    default: {}
                                    description: Configuration per logger
                                    type: object
                                type: object
                              description: Log configuration per container.
                              type: object
                            enableVectorAgent:
                              description: Wether or not to deploy a container with the Vector log agent.
                              nullable: true
                              type: boolean
                          type: object
                        requestedSecretLifetime:
                          description: Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                        volumeMounts:
                          description: Volume mounts for the spark-submit, driver and executor pods.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    replicas:
                      format: uint16
                      minimum: 0.0
                      nullable: true
                      type: integer
                  type: object
                image:
                  description: User-supplied image containing spark-job dependencies that will be copied to the specified volume mount. See the [examples](https://docs.stackable.tech/home/25.3/spark-k8s/usage-guide/examples).
                  nullable: true
                  type: string
                job:
                  description: The job builds a spark-submit command, complete with arguments and referenced dependencies such as templates, and passes it on to Spark. The reason this property uses its own type (SubmitConfigFragment) is because logging is not supported for spark-submit processes.
                  nullable: true
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        requestedSecretLifetime:
                          description: Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                        volumeMounts:
                          description: Volume mounts for the spark-submit, driver and executor pods.
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          type: array
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                  type: object
                logFileDirectory:
                  description: The log file directory definition used by the Spark history server.
                  nullable: true
                  oneOf:
                    - required:
                        - s3
                    - required:
                        - customLogDirectory
                  properties:
                    customLogDirectory:
                      description: A custom log directory
                      type: string
                    s3:
                      description: An S3 bucket storing the log events
                      properties:
                        bucket:
                          oneOf:
                            - required:
                                - inline
                            - required:
                                - reference
                          properties:
                            inline:
                              description: S3 bucket specification containing the bucket name and an inlined or referenced connection specification. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/25.3/concepts/s3).
                              properties:
                                bucketName:
                                  description: The name of the S3 bucket.
                                  type: string
                                connection:
                                  description: The definition of an S3 connection, either inline or as a reference.
                                  oneOf:
                                    - required:
                                        - inline
                                    - required:
                                        - reference
                                  properties:
                                    inline:
                                      description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/25.3/concepts/s3).
                                      properties:
                                        accessStyle:
                                          default: VirtualHosted
                                          description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                          enum:
                                            - Path
                                            - VirtualHosted
                                          type: string
                                        credentials:
                                          description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                          nullable: true
                                          properties:
                                            scope:
                                              description: '[Scope](https://docs.stackable.tech/home/25.3/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass).'
                                              nullable: true
                                              properties:
                                                listenerVolumes:
                                                  default: []
                                                  description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                                  items:
                                                    type: string
                                                  type: array
                                                node:
                                                  default: false
                                                  description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                                  type: boolean
                                                pod:
                                                  default: false
                                                  description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                                  type: boolean
                                                services:
                                                  default: []
                                                  description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            secretClass:
                                              description: '[SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) containing the LDAP bind credentials.'
                                              type: string
                                          required:
                                            - secretClass
                                          type: object
                                        host:
                                          description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                          type: string
                                        port:
                                          description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                          format: uint16
                                          minimum: 0.0
                                          nullable: true
                                          type: integer
                                        region:
                                          default:
                                            name: us-east-1
                                          description: |-
                                            Bucket region used for signing headers (sigv4).

                                            This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                            WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                          properties:
                                            name:
                                              default: us-east-1
                                              type: string
                                          type: object
                                        tls:
                                          description: Use a TLS connection. If not specified no TLS will be used.
                                          nullable: true
                                          properties:
                                            verification:
                                              description: The verification method used to verify the certificates of the server and/or the client.
                                              oneOf:
                                                - required:
                                                    - none
                                                - required:
                                                    - server
                                              properties:
                                                none:
                                                  description: Use TLS but don't verify certificates.
                                                  type: object
                                                server:
                                                  description: Use TLS and a CA certificate to verify the server.
                                                  properties:
                                                    caCert:
                                                      description: CA cert to verify the server.
                                                      oneOf:
                                                        - required:
                                                            - webPki
                                                        - required:
                                                            - secretClass
                                                      properties:
                                                        secretClass:
                                                          description: Name of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                          type: string
                                                        webPki:
                                                          description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                          type: object
                                                      type: object
                                                  required:
                                                    - caCert
                                                  type: object
                                              type: object
                                          required:
                                            - verification
                                          type: object
                                      required:
                                        - host
                                      type: object
                                    reference:
                                      type: string
                                  type: object
                              required:
                                - bucketName
                                - connection
                              type: object
                            reference:
                              type: string
                          type: object
                        prefix:
                          type: string
                      required:
                        - bucket
                        - prefix
                      type: object
                  type: object
                mainApplicationFile:
                  description: The actual application file that will be called by `spark-submit`.
                  type: string
                mainClass:
                  description: The main class - i.e. entry point - for JVM artifacts.
                  nullable: true
                  type: string
                mode:
                  description: 'Mode: cluster or client. Currently only cluster is supported.'
                  enum:
                    - cluster
                    - client
                  type: string
                s3connection:
                  description: Configure an S3 connection that the SparkApplication has access to. Read more in the [Spark S3 usage guide](https://docs.stackable.tech/home/25.3/spark-k8s/usage-guide/s3).
                  nullable: true
                  oneOf:
                    - required:
                        - inline
                    - required:
                        - reference
                  properties:
                    inline:
                      description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/25.3/concepts/s3).
                      properties:
                        accessStyle:
                          default: VirtualHosted
                          description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                          enum:
                            - Path
                            - VirtualHosted
                          type: string
                        credentials:
                          description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                          nullable: true
                          properties:
                            scope:
                              description: '[Scope](https://docs.stackable.tech/home/25.3/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass).'
                              nullable: true
                              properties:
                                listenerVolumes:
                                  default: []
                                  description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                  items:
                                    type: string
                                  type: array
                                node:
                                  default: false
                                  description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                  type: boolean
                                pod:
                                  default: false
                                  description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                  type: boolean
                                services:
                                  default: []
                                  description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            secretClass:
                              description: '[SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) containing the LDAP bind credentials.'
                              type: string
                          required:
                            - secretClass
                          type: object
                        host:
                          description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                          type: string
                        port:
                          description: Port the S3 server listens on. If not specified the product will determine the port to use.
                          format: uint16
                          minimum: 0.0
                          nullable: true
                          type: integer
                        region:
                          default:
                            name: us-east-1
                          description: |-
                            Bucket region used for signing headers (sigv4).

                            This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                            WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                          properties:
                            name:
                              default: us-east-1
                              type: string
                          type: object
                        tls:
                          description: Use a TLS connection. If not specified no TLS will be used.
                          nullable: true
                          properties:
                            verification:
                              description: The verification method used to verify the certificates of the server and/or the client.
                              oneOf:
                                - required:
                                    - none
                                - required:
                                    - server
                              properties:
                                none:
                                  description: Use TLS but don't verify certificates.
                                  type: object
                                server:
                                  description: Use TLS and a CA certificate to verify the server.
                                  properties:
                                    caCert:
                                      description: CA cert to verify the server.
                                      oneOf:
                                        - required:
                                            - webPki
                                        - required:
                                            - secretClass
                                      properties:
                                        secretClass:
                                          description: Name of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                          type: string
                                        webPki:
                                          description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                          type: object
                                      type: object
                                  required:
                                    - caCert
                                  type: object
                              type: object
                          required:
                            - verification
                          type: object
                      required:
                        - host
                      type: object
                    reference:
                      type: string
                  type: object
                sparkConf:
                  additionalProperties:
                    type: string
                  default: {}
                  description: A map of key/value strings that will be passed directly to spark-submit.
                  type: object
                sparkImage:
                  anyOf:
                    - required:
                        - custom
                        - productVersion
                    - required:
                        - productVersion
                  description: |-
                    Specify which image to use, the easiest way is to only configure the `productVersion`. You can also configure a custom image registry to pull from, as well as completely custom images.

                    Consult the [Product image selection documentation](https://docs.stackable.tech/home/25.3/concepts/product_image_selection) for details.
                  properties:
                    custom:
                      description: Overwrite the docker image. Specify the full docker image name, e.g. `oci.stackable.tech/sdp/superset:1.4.1-stackable2.1.0`
                      type: string
                    productVersion:
                      description: Version of the product, e.g. `1.4.1`.
                      type: string
                    pullPolicy:
                      default: Always
                      description: '[Pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy) used when pulling the image.'
                      enum:
                        - IfNotPresent
                        - Always
                        - Never
                      type: string
                    pullSecrets:
                      description: '[Image pull secrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod) to pull images from a private registry.'
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                        required:
                          - name
                        type: object
                      nullable: true
                      type: array
                    repo:
                      description: Name of the docker repo, e.g. `oci.stackable.tech/sdp`
                      nullable: true
                      type: string
                    stackableVersion:
                      description: Stackable version of the product, e.g. `23.4`, `23.4.1` or `0.0.0-dev`. If not specified, the operator will use its own version, e.g. `23.4.1`. When using a nightly operator or a pr version, it will use the nightly `0.0.0-dev` image.
                      nullable: true
                      type: string
                  type: object
                vectorAggregatorConfigMapName:
                  description: Name of the Vector aggregator [discovery ConfigMap](https://docs.stackable.tech/home/25.3/concepts/service_discovery). It must contain the key `ADDRESS` with the address of the Vector aggregator. Follow the [logging tutorial](https://docs.stackable.tech/home/25.3/tutorials/logging-vector-aggregator) to learn how to configure log aggregation with Vector.
                  nullable: true
                  type: string
                volumes:
                  default: []
                  description: A list of volumes that can be made available to the job, driver or executors via their volume mounts.
                  items:
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  type: array
              required:
                - mainApplicationFile
                - mode
                - sparkImage
              type: object
            status:
              nullable: true
              properties:
                phase:
                  type: string
              required:
                - phase
              type: object
          required:
            - spec
          title: SparkApplication
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sparkhistoryservers.spark.stackable.tech
  annotations:
    helm.sh/resource-policy: keep
spec:
  group: spark.stackable.tech
  names:
    categories: []
    kind: SparkHistoryServer
    plural: sparkhistoryservers
    shortNames:
      - sparkhist
    singular: sparkhistoryserver
  scope: Namespaced
  versions:
    - additionalPrinterColumns: []
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Auto-generated derived type for SparkHistoryServerSpec via `CustomResource`
          properties:
            spec:
              description: A Spark cluster history server component. This resource is managed by the Stackable operator for Apache Spark. Find more information on how to use it in the [operator documentation](https://docs.stackable.tech/home/25.3/spark-k8s/usage-guide/history-server).
              properties:
                clusterConfig:
                  default:
                    listenerClass: cluster-internal
                  description: Global Spark history server configuration that applies to all roles and role groups.
                  properties:
                    listenerClass:
                      default: cluster-internal
                      description: |-
                        This field controls which type of Service the Operator creates for this HistoryServer:

                        * cluster-internal: Use a ClusterIP service

                        * external-unstable: Use a NodePort service

                        * external-stable: Use a LoadBalancer service

                        This is a temporary solution with the goal to keep yaml manifests forward compatible. In the future, this setting will control which ListenerClass <https://docs.stackable.tech/home/stable/listener-operator/listenerclass.html> will be used to expose the service, and ListenerClass names will stay the same, allowing for a non-breaking change.
                      enum:
                        - cluster-internal
                        - external-unstable
                        - external-stable
                      type: string
                  type: object
                image:
                  anyOf:
                    - required:
                        - custom
                        - productVersion
                    - required:
                        - productVersion
                  description: |-
                    Specify which image to use, the easiest way is to only configure the `productVersion`. You can also configure a custom image registry to pull from, as well as completely custom images.

                    Consult the [Product image selection documentation](https://docs.stackable.tech/home/25.3/concepts/product_image_selection) for details.
                  properties:
                    custom:
                      description: Overwrite the docker image. Specify the full docker image name, e.g. `oci.stackable.tech/sdp/superset:1.4.1-stackable2.1.0`
                      type: string
                    productVersion:
                      description: Version of the product, e.g. `1.4.1`.
                      type: string
                    pullPolicy:
                      default: Always
                      description: '[Pull policy](https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy) used when pulling the image.'
                      enum:
                        - IfNotPresent
                        - Always
                        - Never
                      type: string
                    pullSecrets:
                      description: '[Image pull secrets](https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod) to pull images from a private registry.'
                      items:
                        description: LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
                        properties:
                          name:
                            description: 'Name of the referent. This field is effectively required, but due to backwards compatibility is allowed to be empty. Instances of this type with an empty value here are almost certainly wrong. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                            type: string
                        required:
                          - name
                        type: object
                      nullable: true
                      type: array
                    repo:
                      description: Name of the docker repo, e.g. `oci.stackable.tech/sdp`
                      nullable: true
                      type: string
                    stackableVersion:
                      description: Stackable version of the product, e.g. `23.4`, `23.4.1` or `0.0.0-dev`. If not specified, the operator will use its own version, e.g. `23.4.1`. When using a nightly operator or a pr version, it will use the nightly `0.0.0-dev` image.
                      nullable: true
                      type: string
                  type: object
                logFileDirectory:
                  description: The log file directory definition used by the Spark history server.
                  oneOf:
                    - required:
                        - s3
                    - required:
                        - customLogDirectory
                  properties:
                    customLogDirectory:
                      description: A custom log directory
                      type: string
                    s3:
                      description: An S3 bucket storing the log events
                      properties:
                        bucket:
                          oneOf:
                            - required:
                                - inline
                            - required:
                                - reference
                          properties:
                            inline:
                              description: S3 bucket specification containing the bucket name and an inlined or referenced connection specification. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/25.3/concepts/s3).
                              properties:
                                bucketName:
                                  description: The name of the S3 bucket.
                                  type: string
                                connection:
                                  description: The definition of an S3 connection, either inline or as a reference.
                                  oneOf:
                                    - required:
                                        - inline
                                    - required:
                                        - reference
                                  properties:
                                    inline:
                                      description: S3 connection definition as a resource. Learn more on the [S3 concept documentation](https://docs.stackable.tech/home/25.3/concepts/s3).
                                      properties:
                                        accessStyle:
                                          default: VirtualHosted
                                          description: Which access style to use. Defaults to virtual hosted-style as most of the data products out there. Have a look at the [AWS documentation](https://docs.aws.amazon.com/AmazonS3/latest/userguide/VirtualHosting.html).
                                          enum:
                                            - Path
                                            - VirtualHosted
                                          type: string
                                        credentials:
                                          description: If the S3 uses authentication you have to specify you S3 credentials. In the most cases a [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) providing `accessKey` and `secretKey` is sufficient.
                                          nullable: true
                                          properties:
                                            scope:
                                              description: '[Scope](https://docs.stackable.tech/home/25.3/secret-operator/scope) of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass).'
                                              nullable: true
                                              properties:
                                                listenerVolumes:
                                                  default: []
                                                  description: The listener volume scope allows Node and Service scopes to be inferred from the applicable listeners. This must correspond to Volume names in the Pod that mount Listeners.
                                                  items:
                                                    type: string
                                                  type: array
                                                node:
                                                  default: false
                                                  description: The node scope is resolved to the name of the Kubernetes Node object that the Pod is running on. This will typically be the DNS name of the node.
                                                  type: boolean
                                                pod:
                                                  default: false
                                                  description: The pod scope is resolved to the name of the Kubernetes Pod. This allows the secret to differentiate between StatefulSet replicas.
                                                  type: boolean
                                                services:
                                                  default: []
                                                  description: The service scope allows Pod objects to specify custom scopes. This should typically correspond to Service objects that the Pod participates in.
                                                  items:
                                                    type: string
                                                  type: array
                                              type: object
                                            secretClass:
                                              description: '[SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) containing the LDAP bind credentials.'
                                              type: string
                                          required:
                                            - secretClass
                                          type: object
                                        host:
                                          description: 'Host of the S3 server without any protocol or port. For example: `west1.my-cloud.com`.'
                                          type: string
                                        port:
                                          description: Port the S3 server listens on. If not specified the product will determine the port to use.
                                          format: uint16
                                          minimum: 0.0
                                          nullable: true
                                          type: integer
                                        region:
                                          default:
                                            name: us-east-1
                                          description: |-
                                            Bucket region used for signing headers (sigv4).

                                            This defaults to `us-east-1` which is compatible with other implementations such as Minio.

                                            WARNING: Some products use the Hadoop S3 implementation which falls back to us-east-2.
                                          properties:
                                            name:
                                              default: us-east-1
                                              type: string
                                          type: object
                                        tls:
                                          description: Use a TLS connection. If not specified no TLS will be used.
                                          nullable: true
                                          properties:
                                            verification:
                                              description: The verification method used to verify the certificates of the server and/or the client.
                                              oneOf:
                                                - required:
                                                    - none
                                                - required:
                                                    - server
                                              properties:
                                                none:
                                                  description: Use TLS but don't verify certificates.
                                                  type: object
                                                server:
                                                  description: Use TLS and a CA certificate to verify the server.
                                                  properties:
                                                    caCert:
                                                      description: CA cert to verify the server.
                                                      oneOf:
                                                        - required:
                                                            - webPki
                                                        - required:
                                                            - secretClass
                                                      properties:
                                                        secretClass:
                                                          description: Name of the [SecretClass](https://docs.stackable.tech/home/25.3/secret-operator/secretclass) which will provide the CA certificate. Note that a SecretClass does not need to have a key but can also work with just a CA certificate, so if you got provided with a CA cert but don't have access to the key you can still use this method.
                                                          type: string
                                                        webPki:
                                                          description: Use TLS and the CA certificates trusted by the common web browsers to verify the server. This can be useful when you e.g. use public AWS S3 or other public available services.
                                                          type: object
                                                      type: object
                                                  required:
                                                    - caCert
                                                  type: object
                                              type: object
                                          required:
                                            - verification
                                          type: object
                                      required:
                                        - host
                                      type: object
                                    reference:
                                      type: string
                                  type: object
                              required:
                                - bucketName
                                - connection
                              type: object
                            reference:
                              type: string
                          type: object
                        prefix:
                          type: string
                      required:
                        - bucket
                        - prefix
                      type: object
                  type: object
                nodes:
                  description: A history server node role definition.
                  properties:
                    cliOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      type: object
                    config:
                      default: {}
                      properties:
                        affinity:
                          default:
                            nodeAffinity: null
                            nodeSelector: null
                            podAffinity: null
                            podAntiAffinity: null
                          description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/25.3/concepts/operations/pod_placement).
                          properties:
                            nodeAffinity:
                              description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            nodeSelector:
                              additionalProperties:
                                type: string
                              description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                            podAffinity:
                              description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            podAntiAffinity:
                              description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                              nullable: true
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                        cleaner:
                          nullable: true
                          type: boolean
                        logging:
                          default:
                            containers: {}
                            enableVectorAgent: null
                          description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/25.3/concepts/logging).
                          properties:
                            containers:
                              additionalProperties:
                                anyOf:
                                  - required:
                                      - custom
                                  - {}
                                description: Log configuration of the container
                                properties:
                                  console:
                                    description: Configuration for the console appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  custom:
                                    description: Custom log configuration provided in a ConfigMap
                                    properties:
                                      configMap:
                                        description: ConfigMap containing the log configuration files
                                        nullable: true
                                        type: string
                                    type: object
                                  file:
                                    description: Configuration for the file appender
                                    nullable: true
                                    properties:
                                      level:
                                        description: The log level threshold. Log events with a lower log level are discarded.
                                        enum:
                                          - TRACE
                                          - DEBUG
                                          - INFO
                                          - WARN
                                          - ERROR
                                          - FATAL
                                          - NONE
                                        nullable: true
                                        type: string
                                    type: object
                                  loggers:
                                    additionalProperties:
                                      description: Configuration of a logger
                                      properties:
                                        level:
                                          description: The log level threshold. Log events with a lower log level are discarded.
                                          enum:
                                            - TRACE
                                            - DEBUG
                                            - INFO
                                            - WARN
                                            - ERROR
                                            - FATAL
                                            - NONE
                                          nullable: true
                                          type: string
                                      type: object
                                    default: {}
                                    description: Configuration per logger
                                    type: object
                                type: object
                              description: Log configuration per container.
                              type: object
                            enableVectorAgent:
                              description: Wether or not to deploy a container with the Vector log agent.
                              nullable: true
                              type: boolean
                          type: object
                        requestedSecretLifetime:
                          description: Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.
                          nullable: true
                          type: string
                        resources:
                          default:
                            cpu:
                              max: null
                              min: null
                            memory:
                              limit: null
                              runtimeLimits: {}
                            storage: {}
                          description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                          properties:
                            cpu:
                              default:
                                max: null
                                min: null
                              properties:
                                max:
                                  description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                                min:
                                  description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                  nullable: true
                                  type: string
                              type: object
                            memory:
                              properties:
                                limit:
                                  description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                  nullable: true
                                  type: string
                                runtimeLimits:
                                  description: Additional options that can be specified.
                                  type: object
                              type: object
                            storage:
                              type: object
                          type: object
                      type: object
                    configOverrides:
                      additionalProperties:
                        additionalProperties:
                          type: string
                        type: object
                      default: {}
                      description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                      type: object
                    envOverrides:
                      additionalProperties:
                        type: string
                      default: {}
                      description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                      type: object
                    jvmArgumentOverrides:
                      default:
                        add: []
                        remove: []
                        removeRegex: []
                      description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#jvm-argument-overrides) for details on the usage.
                      properties:
                        add:
                          default: []
                          description: JVM arguments to be added
                          items:
                            type: string
                          type: array
                        remove:
                          default: []
                          description: JVM arguments to be removed by exact match
                          items:
                            type: string
                          type: array
                        removeRegex:
                          default: []
                          description: JVM arguments matching any of this regexes will be removed
                          items:
                            type: string
                          type: array
                      type: object
                    podOverrides:
                      default: {}
                      description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#pod-overrides) for more information.
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    roleConfig:
                      default:
                        podDisruptionBudget:
                          enabled: true
                          maxUnavailable: null
                      description: This is a product-agnostic RoleConfig, which is sufficient for most of the products.
                      properties:
                        podDisruptionBudget:
                          default:
                            enabled: true
                            maxUnavailable: null
                          description: |-
                            This struct is used to configure:

                            1. If PodDisruptionBudgets are created by the operator 2. The allowed number of Pods to be unavailable (`maxUnavailable`)

                            Learn more in the [allowed Pod disruptions documentation](https://docs.stackable.tech/home/25.3/concepts/operations/pod_disruptions).
                          properties:
                            enabled:
                              default: true
                              description: Whether a PodDisruptionBudget should be written out for this role. Disabling this enables you to specify your own - custom - one. Defaults to true.
                              type: boolean
                            maxUnavailable:
                              description: The number of Pods that are allowed to be down because of voluntary disruptions. If you don't explicitly set this, the operator will use a sane default based upon knowledge about the individual product.
                              format: uint16
                              minimum: 0.0
                              nullable: true
                              type: integer
                          type: object
                      type: object
                    roleGroups:
                      additionalProperties:
                        properties:
                          cliOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            type: object
                          config:
                            default: {}
                            properties:
                              affinity:
                                default:
                                  nodeAffinity: null
                                  nodeSelector: null
                                  podAffinity: null
                                  podAntiAffinity: null
                                description: These configuration settings control [Pod placement](https://docs.stackable.tech/home/25.3/concepts/operations/pod_placement).
                                properties:
                                  nodeAffinity:
                                    description: Same as the `spec.affinity.nodeAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  nodeSelector:
                                    additionalProperties:
                                      type: string
                                    description: Simple key-value pairs forming a nodeSelector, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                  podAffinity:
                                    description: Same as the `spec.affinity.podAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                  podAntiAffinity:
                                    description: Same as the `spec.affinity.podAntiAffinity` field on the Pod, see the [Kubernetes docs](https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node)
                                    nullable: true
                                    type: object
                                    x-kubernetes-preserve-unknown-fields: true
                                type: object
                              cleaner:
                                nullable: true
                                type: boolean
                              logging:
                                default:
                                  containers: {}
                                  enableVectorAgent: null
                                description: Logging configuration, learn more in the [logging concept documentation](https://docs.stackable.tech/home/25.3/concepts/logging).
                                properties:
                                  containers:
                                    additionalProperties:
                                      anyOf:
                                        - required:
                                            - custom
                                        - {}
                                      description: Log configuration of the container
                                      properties:
                                        console:
                                          description: Configuration for the console appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        custom:
                                          description: Custom log configuration provided in a ConfigMap
                                          properties:
                                            configMap:
                                              description: ConfigMap containing the log configuration files
                                              nullable: true
                                              type: string
                                          type: object
                                        file:
                                          description: Configuration for the file appender
                                          nullable: true
                                          properties:
                                            level:
                                              description: The log level threshold. Log events with a lower log level are discarded.
                                              enum:
                                                - TRACE
                                                - DEBUG
                                                - INFO
                                                - WARN
                                                - ERROR
                                                - FATAL
                                                - NONE
                                              nullable: true
                                              type: string
                                          type: object
                                        loggers:
                                          additionalProperties:
                                            description: Configuration of a logger
                                            properties:
                                              level:
                                                description: The log level threshold. Log events with a lower log level are discarded.
                                                enum:
                                                  - TRACE
                                                  - DEBUG
                                                  - INFO
                                                  - WARN
                                                  - ERROR
                                                  - FATAL
                                                  - NONE
                                                nullable: true
                                                type: string
                                            type: object
                                          default: {}
                                          description: Configuration per logger
                                          type: object
                                      type: object
                                    description: Log configuration per container.
                                    type: object
                                  enableVectorAgent:
                                    description: Wether or not to deploy a container with the Vector log agent.
                                    nullable: true
                                    type: boolean
                                type: object
                              requestedSecretLifetime:
                                description: Request secret (currently only autoTls certificates) lifetime from the secret operator, e.g. `7d`, or `30d`. This can be shortened by the `maxCertificateLifetime` setting on the SecretClass issuing the TLS certificate.
                                nullable: true
                                type: string
                              resources:
                                default:
                                  cpu:
                                    max: null
                                    min: null
                                  memory:
                                    limit: null
                                    runtimeLimits: {}
                                  storage: {}
                                description: Resource usage is configured here, this includes CPU usage, memory usage and disk storage usage, if this role needs any.
                                properties:
                                  cpu:
                                    default:
                                      max: null
                                      min: null
                                    properties:
                                      max:
                                        description: The maximum amount of CPU cores that can be requested by Pods. Equivalent to the `limit` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                      min:
                                        description: The minimal amount of CPU cores that Pods need to run. Equivalent to the `request` for Pod resource configuration. Cores are specified either as a decimal point number or as milli units. For example:`1.5` will be 1.5 cores, also written as `1500m`.
                                        nullable: true
                                        type: string
                                    type: object
                                  memory:
                                    properties:
                                      limit:
                                        description: 'The maximum amount of memory that should be available to the Pod. Specified as a byte [Quantity](https://kubernetes.io/docs/reference/kubernetes-api/common-definitions/quantity/), which means these suffixes are supported: E, P, T, G, M, k. You can also use the power-of-two equivalents: Ei, Pi, Ti, Gi, Mi, Ki. For example, the following represent roughly the same value: `128974848, 129e6, 129M,  128974848000m, 123Mi`'
                                        nullable: true
                                        type: string
                                      runtimeLimits:
                                        description: Additional options that can be specified.
                                        type: object
                                    type: object
                                  storage:
                                    type: object
                                type: object
                            type: object
                          configOverrides:
                            additionalProperties:
                              additionalProperties:
                                type: string
                              type: object
                            default: {}
                            description: The `configOverrides` can be used to configure properties in product config files that are not exposed in the CRD. Read the [config overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#config-overrides) and consult the operator specific usage guide documentation for details on the available config files and settings for the specific product.
                            type: object
                          envOverrides:
                            additionalProperties:
                              type: string
                            default: {}
                            description: '`envOverrides` configure environment variables to be set in the Pods. It is a map from strings to strings - environment variables and the value to set. Read the [environment variable overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#env-overrides) for more information and consult the operator specific usage guide to find out about the product specific environment variables that are available.'
                            type: object
                          jvmArgumentOverrides:
                            default:
                              add: []
                              remove: []
                              removeRegex: []
                            description: Allows overriding JVM arguments. Please read on the [JVM argument overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#jvm-argument-overrides) for details on the usage.
                            properties:
                              add:
                                default: []
                                description: JVM arguments to be added
                                items:
                                  type: string
                                type: array
                              remove:
                                default: []
                                description: JVM arguments to be removed by exact match
                                items:
                                  type: string
                                type: array
                              removeRegex:
                                default: []
                                description: JVM arguments matching any of this regexes will be removed
                                items:
                                  type: string
                                type: array
                            type: object
                          podOverrides:
                            default: {}
                            description: In the `podOverrides` property you can define a [PodTemplateSpec](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.27/#podtemplatespec-v1-core) to override any property that can be set on a Kubernetes Pod. Read the [Pod overrides documentation](https://docs.stackable.tech/home/25.3/concepts/overrides#pod-overrides) for more information.
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          replicas:
                            format: uint16
                            minimum: 0.0
                            nullable: true
                            type: integer
                        type: object
                      type: object
                  required:
                    - roleGroups
                  type: object
                sparkConf:
                  additionalProperties:
                    type: string
                  default: {}
                  description: A map of key/value strings that will be passed directly to Spark when deploying the history server.
                  type: object
                vectorAggregatorConfigMapName:
                  description: Name of the Vector aggregator discovery ConfigMap. It must contain the key `ADDRESS` with the address of the Vector aggregator.
                  nullable: true
                  type: string
              required:
                - image
                - logFileDirectory
                - nodes
              type: object
          required:
            - spec
          title: SparkHistoryServer
          type: object
      served: true
      storage: true
      subresources: {}

---
apiVersion: v1
kind: Secret
metadata:
  name: minio-credentials
  labels:
    secrets.stackable.tech/class: spark-history-server-s3-credentials-class
stringData:
  accessKey: minioAccessKey
  secretKey: minioSecretKey
  # The following two entries are used by the Bitnami chart for MinIO to
  # set up credentials for accessing buckets managed by the MinIO tenant.
  root-user: minioAccessKey
  root-password: minioSecretKey
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: spark-history-server-s3-credentials-class
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
{% if test_scenario['values']['openshift'] == 'true' %}
---
apiVersion: v1
kind: Secret
metadata:
  name: history-credentials
  labels:
    secrets.stackable.tech/class: history-credentials-class
stringData:
  accessKey: eventLogAccessKey
  secretKey: eventLogSecretKey
  # The following two entries are used by the Bitnami chart for MinIO to
  # set up credentials for accessing buckets managed by the MinIO tenant.
  root-user: eventLogAccessKey
  root-password: eventLogSecretKey
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: history-credentials-class
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
{% endif %}
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: s3-credentials
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: s3-credentials
  labels:
    secrets.stackable.tech/class: s3-credentials
stringData:
  accessKey: spark
  secretKey: sparkspark
---
apiVersion: secrets.stackable.tech/v1alpha1
kind: SecretClass
metadata:
  name: history-credentials
spec:
  backend:
    k8sSearch:
      searchNamespace:
        pod: {}
---
apiVersion: v1
kind: Secret
metadata:
  name: history-credentials
  labels:
    secrets.stackable.tech/class: history-credentials
stringData:
  accessKey: spark
  secretKey: sparkspark

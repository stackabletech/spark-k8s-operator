---
apiVersion: s3.stackable.tech/v1alpha1
kind: S3Connection
metadata:
  name: spark-history-s3-connection
spec:
  host: eventlog-minio
  port: 9000
  accessStyle: Path
  credentials:
    secretClass: history-credentials-class
{% if test_scenario['values']['s3-use-tls'] == 'true' %}
  tls:
    verification:
      server:
        caCert:
          secretClass: minio-tls-eventlog
{% endif %}
---
apiVersion: s3.stackable.tech/v1alpha1
kind: S3Bucket
metadata:
  name: spark-history-s3-bucket
spec:
  bucketName: spark-logs
  connection:
    reference: spark-history-s3-connection
---
apiVersion: spark.stackable.tech/v1alpha1
kind: SparkHistoryServer
metadata:
  name: spark-history
spec:
  image:
{% if test_scenario['values']['spark-connect'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['spark-connect'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['spark-connect'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['spark-connect'] }}"
{% endif %}
    pullPolicy: IfNotPresent
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
  vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  logFileDirectory:
    s3:
      prefix: logs/
      bucket:
        reference: spark-history-s3-bucket
  nodes:
    roleGroups:
      default:
        replicas: 1
        config:
          cleaner: true

---
apiVersion: spark.stackable.tech/v1alpha1
kind: SparkApplication
metadata:
  name: resources-crd
spec:
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
  vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  sparkImage:
{% if test_scenario['values']['spark'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['spark'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['spark'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['spark'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  mode: cluster
  mainClass: org.apache.spark.examples.SparkALS
  mainApplicationFile: "local:///stackable/spark/examples/jars/spark-examples.jar"
  sparkConf:
    spark.kubernetes.submission.waitAppCompletion: "false"
    spark.kubernetes.driver.pod.name: "resources-crd-driver"
    spark.kubernetes.executor.podNamePrefix: "resources-crd"
  job:
    config:
      resources:
        cpu:
          min: 250m
          max: 500m
        memory:
          limit: 512Mi
  driver:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
      resources:
        cpu:
          min: 200m
          max: 1200m
        memory:
          limit: 1024Mi
  executor:
    replicas: 1
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
      resources:
        cpu:
          min: 1250m
          max: 2000m
        memory:
          limit: 1024Mi

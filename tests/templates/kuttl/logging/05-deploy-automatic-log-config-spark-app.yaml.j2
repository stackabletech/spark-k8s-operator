---
apiVersion: spark.stackable.tech/v1alpha1
kind: SparkApplication
metadata:
  name: spark-automatic-log-config
spec:
  sparkImage:
{% if test_scenario['values']['spark'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['spark'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['spark'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['spark'] }}"
{% endif %}
    pullPolicy: IfNotPresent
  image: docker.stackable.tech/stackable/ny-tlc-report:{{ test_scenario['values']['ny-tlc-report'] }}
  vectorAggregatorConfigMapName: spark-vector-aggregator-discovery
  mode: cluster
  mainClass: org.apache.spark.examples.SparkALS
  mainApplicationFile: local:///stackable/spark/examples/jars/spark-examples.jar
  job:
    config:
      logging:
        enableVectorAgent: true
        containers:
          spark-submit:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
          vector:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
  driver:
    config:
      logging:
        enableVectorAgent: true
        containers:
          spark:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
          job:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
          vector:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
  executor:
    replicas: 1
    config:
      logging:
        enableVectorAgent: true
        containers:
          spark:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
          job:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO
          vector:
            console:
              level: INFO
            file:
              level: INFO
            loggers:
              ROOT:
                level: INFO

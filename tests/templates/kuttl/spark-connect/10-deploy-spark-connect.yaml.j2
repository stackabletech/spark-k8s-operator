---
apiVersion: v1
kind: ConfigMap
metadata:
  name: spark-connect-log-config
data:
  log4j2.properties: |-
    appenders = CONSOLE

    appender.CONSOLE.type = Console
    appender.CONSOLE.name = CONSOLE
    appender.CONSOLE.target = SYSTEM_ERR
    appender.CONSOLE.layout.type = PatternLayout
    appender.CONSOLE.layout.pattern = %d{ISO8601} %p [%t] %c - %m%n
    appender.CONSOLE.filter.threshold.type = ThresholdFilter
    appender.CONSOLE.filter.threshold.level = DEBUG

    rootLogger.level=INFO
    rootLogger.appenderRefs = CONSOLE
    rootLogger.appenderRef.CONSOLE.ref = CONSOLE
---
apiVersion: spark.stackable.tech/v1alpha1
kind: SparkConnectServer
metadata:
  name: spark-connect
spec:
  image:
{% if test_scenario['values']['spark-connect'].find(",") > 0 %}
    custom: "{{ test_scenario['values']['spark-connect'].split(',')[1] }}"
    productVersion: "{{ test_scenario['values']['spark-connect'].split(',')[0] }}"
{% else %}
    productVersion: "{{ test_scenario['values']['spark-connect'] }}"
{% endif %}
    pullPolicy: IfNotPresent
{% if lookup('env', 'VECTOR_AGGREGATOR') %}
  vectorAggregatorConfigMapName: vector-aggregator-discovery
{% endif %}
  #sparkConf:
  nodes:
    config:
      logging:
        enableVectorAgent: {{ lookup('env', 'VECTOR_AGGREGATOR') | length > 0 }}
        containers:
          spark-connect:
            custom:
              configMap: spark-connect-log-config
    roleGroups:
      default:
        replicas: 1
